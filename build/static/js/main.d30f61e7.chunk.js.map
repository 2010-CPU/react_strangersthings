{"version":3,"sources":["components/Signin.js","components/GetPosts.js","components/AddPost.js","components/DeletePost.js","components/UserProfile.js","components/MessageForm.js","components/MessageList.js","components/Navbar.js","index.js"],"names":["Signin","type","setToken","setUser","useState","username","setUsername","password","setPassword","title","toggleTitle","toggleType","history","useHistory","handleSubmit","event","a","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","user","response","json","data","token","localStorage","setItem","push","className","onSubmit","value","onChange","target","placeholder","to","GetPosts","postList","setPosts","fetchPosts","reponse","posts","useEffect","map","post","price","location","description","_id","author","isAuthor","postId","AddPost","setTitle","setDescription","setPrice","setLocation","setIsAuthor","addPost","e","DeletePost","handleDelete","id","success","newPosts","filter","onClick","UserProfile","getUserData","idx","MessageForm","content","setContent","message","MessageList","messages","setMessages","getMessageList","fromUser","Navbar","toUpperCase","path","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d30f61e7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {Link, useHistory} from 'react-router-dom';\n\nconst Signin = ({type, setToken, setUser}) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const title = type === 'login' ? 'Login' : 'Register';\n  const toggleTitle = type === 'login' ? \"Don't have an account?\" : \"Already registered?\";\n  const toggleType = type === 'login' ? 'register' : 'login';\n  const history = useHistory();\n \n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log('username: ', username);\n    console.log('password: ', password);\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/${type}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        user: {\n          username,\n          password\n        }\n      })\n    });\n    const {data} = await response.json();\n    const token = data?.token;\n    if (token) {\n    setToken(token);\n    localStorage.setItem('token', token)\n      const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me`, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n    })\n    const {data} = await response.json();\n    console.log(\"data:\", data)\n    setUser(data)\n    setUsername('');\n    setPassword('');\n    history.push('/');\n  }\n}\n  return <>\n    <div className=\"login-container\">\n    <h2 className=\"login-title\">{title}</h2>\n    <form onSubmit={handleSubmit} className=\"signin-form\">\n      <input type=\"text\"  value={username} onChange={(event) => setUsername(event.target.value)}placeholder=\"username\"></input>\n      <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)}placeholder=\"password\"></input>\n      <button type=\"submit\" className=\"button\" >{title}</button>\n    <Link to={`/${toggleType}`} className=\"toggle-login\">{toggleTitle}</Link>\n    </form>\n    </div>\n  </>\n}\n\nexport default Signin;\n","import React, { useState, useEffect } from 'react';\nimport { DeletePost, MessageForm } from './index';\nimport './style/post.css'\n\nconst GetPosts = ({token, setToken, setUser}) => {\n    const [postList, setPosts] = useState([])\n\n    const fetchPosts = async () => {\n        if (token) {\n            setToken(token)\n                const reponse = await fetch('https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts', {\n                    headers: {\n                    'Authorization': `Bearer ${token}`\n                    }\n                })\n                const {data: {posts}} = await reponse.json()\n                setPosts(posts)\n            }\n                else {\n                const response = await fetch('https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts')\n                const {data: {posts}} = await response.json();\n                setPosts(posts)\n                }\n        }\n    \n        useEffect (() => {\n            fetchPosts();\n        }, []);\n\n          return <>\n            {\n                postList.map(post => {\n                    const {title, price, location, description,  _id, author, isAuthor} = post;\n                return  (\n                    \n                    <div className=\"post-container\" key={_id}>\n                    <div className=\"post\">\n                            <div className=\"post-title\">{title}</div>\n                            <div className=\"post-description\">Description:  {description}</div>\n                            <div className=\"price\">Price:  {price}</div>\n                            <div className=\"location\">Location:  {location}</div>\n                            <div className=\"seller\">Seller:  {author.username}</div> \n                {\n                    isAuthor ?< DeletePost token={token} postList={postList} setPosts={setPosts} postId={_id}/> : ''\n                } \n                {\n                    token && !isAuthor ? \n                    <MessageForm token={token} setUser={setUser} postId={_id} setPosts={setPosts}/> : ''\n                }\n                </div>\n                </div>\n    \n                )\n            })\n        }\n    </>\n}\n\n        \nexport default GetPosts;\n","import React, { useState } from 'react';\nimport {useHistory} from 'react-router-dom'; \n\nconst AddPost = ({token}) => {\n    const [title, setTitle] = useState([]);\n    const [description, setDescription] = useState([]);\n    const [price, setPrice] = useState([]);\n    const [location, setLocation] = useState([]);\n    const [isAuthor, setIsAuthor] = useState(false)\n    const [posts, setPosts] = useState([])\n    const history = useHistory();\n\n    const addPost = async () => {\n        const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts`, {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                post: {\n                  title: title,\n                  description: description,\n                  price: price,\n                  location: location,\n                  isAuthor: isAuthor,\n                }\n              })\n          })\n          const {data} = await response.json();\n          setTitle('');\n          setDescription('');\n          setPrice('');\n          setLocation('');\n          setIsAuthor(true)\n          setPosts([...posts, data.post])\n          history.push('/users/me')\n        }\n\n    const handleSubmit = async(e) => {\n        e.preventDefault()\n        addPost()\n    };\n    return <>\n        <div className=\"add-post-container\">\n            <h3>Create your new post!</h3>\n        <form onSubmit={handleSubmit} className=\"add-post-form\">\n            <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)}placeholder=\"title\"></input>\n            <input type=\"text\" className=\"description\" value={description} onChange={(e) => setDescription(e.target.value)}placeholder=\"description\"></input>\n            <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)}placeholder=\"price\"></input>\n            <input type=\"text\" value={location} onChange={(e) => setLocation(e.target.value)}placeholder=\"location\"></input>\n            <button type=\"submit\" className=\"button\">Submit</button>\n        </form>\n        </div>\n    </>\n}\n\nexport default AddPost","\nconst DeletePost = ({token, postId, setPosts, postList}) => {\n\n    const handleDelete = async (id) => {\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts/${id}`, {\n        method: \"DELETE\",\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': `Bearer ${token}`\n        }\n    })\n    const data  = await response.json();\n    if (data.success){\n        const newPosts = postList.filter(post => post._id !== postId);\n        setPosts(newPosts)\n    }\n    }\n    return <>\n        <button className=\"button-delete\" onClick={() => handleDelete(postId)}>DELETE</button>\n    </>\n}\n\nexport default DeletePost;\n\n\n","import React, { useState, useEffect } from 'react';\nimport DeletePost from './DeletePost';\n\nconst UserProfile = ({token, setUser}) => {\n    \n    const[postList, setPosts] = useState([])   \n    const getUserData = async () => {\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me', {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        const data = await response.json();\n        setUser(data.data.posts)\n        setPosts(data.data.posts)\n    }\n    useEffect (() => {\n        getUserData();   \n    }, [token]);\n\n      return <>\n      <div className=\"your-posts\">Your Posts</div>\n        {\n        postList.map((post, idx) => {\n            const {title, price, location, description, _id,  author} = post;\n            return  <div className=\"post-container\" key={idx}>\n                <div className=\"post\">\n                <span className=\"post-info\">\n                <div className=\"post-title\">{title}</div>\n                    <div>Description:  {description}</div>\n                    <div>Price: {price}</div>\n                    <div>Location: {location}</div>\n                    <div>Seller: {author.username}</div>\n                </span>\n                </div>\n            <DeletePost token={token} setPosts={setPosts} postList={postList} postId={_id}/>\n            </div>\n            })\n        }\n    </>\n}\n\nexport default UserProfile;","import React, { useState } from 'react';\n\nconst MessageForm = ({token, postId}) => {\n    const [content, setContent] =useState('');\n    \n    const onSubmit = async (event) => {\n        event.preventDefault()\n        const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts/${postId}/messages`,{\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                message: {\n                content\n                }\n            })\n        })\n        const data = await response.json()\n        setContent('');\n    }\n    return <>\n        <form onSubmit={onSubmit} className=\"message-form\">\n        <input type=\"text\" className=\"message-form-input\" value={content} onChange={(event) => {\n            setContent(event.target.value);\n        }} placeholder=\"Type message here\"></input>\n        <button className=\"btn-message\" type=\"submit\">SEND MESSAGE</button>\n        </form>\n        </>\n}\nexport default MessageForm;","import React, { useEffect } from 'react';\n\n\nconst MessageList = ({token, messages, setMessages, user, setUser}) => {\n\n    const getMessageList = async () => {\n        console.log('token:', token)\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me', { \n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        const data = await response.json();\n        setMessages(data.data.messages)  \n        setUser(data.data.username)\n    }\n    useEffect (() => {\n        getMessageList();   \n    }, [token]);\n\n    return <>\n            <div className=\"message-box\">       \n        {\n            messages.map((message, idx)  => {           \n           if (message.fromUser.username !== user ){\n                return <div className=\"messages-inbox-container\" key={idx}>\n                    <div className=\"messages-in\">\n                <h3>Message Inbox</h3>\n                <p>Re: {message.post.title}</p>\n                <p>Message:{message.content}</p>\n                <p>From:{message.fromUser.username}</p>\n                </div>\n            </div>  \n           }\n            else {\n                return <div className=\"messages-outbox-container\" key={idx}>\n                <div className=\"messages-out\">\n                <h3>Message Outbox</h3>\n                <p>Re: {message.post.title}</p>\n                <p>Message:{message.content}</p>\n                <p>From:{message.fromUser.username}</p>\n                </div>\n            </div>\n            }      \n        })\n        }\n    </div>\n</>\n}\n\nexport default MessageList;\n\n\n","import { Link} from 'react-router-dom';\n\nimport './style/nav.css'\nconst Navbar = ({token, setToken, user, setUser}) => {\n    return <>\n    {\n        <nav className=\"nav-bar\">\n        <div id=\"link-title\">Strangers Things</div>\n        {user.username && <div className=\"logged-in\">Hello {user.username.toUpperCase()}!</div> }\n\n        <Link to=\"users/me\" className=\"links\">{token ? 'User Profile' : ''}</Link> \n        <Link path to=\"/messages\" className=\"links\">{token ? 'Messages' : ''}</Link>\n        <Link path to=\"/addposts\" className=\"links\">{token ? 'Create Post' : ''}</Link>\n        <Link to=\"/login\" onClick={() => {\n            if (token) {\n                setToken('')\n                setUser({})\n            }\n        }} className=\"links\">{token ? 'Logout' : 'Sign in'}  </Link> \n         <Link to=\"/\" className=\"links\">Home</Link>\n    </nav>\n    }\n    </>\n}\n\nexport default Navbar","\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport './styles.css'\n\nimport {\n  Signin,\n  GetPosts,\n  AddPost,\n  UserProfile,\n  MessageList,\n  Navbar,\n} from './components';\n\nconst App =  () => {\n  const [token, setToken] = useState('');\n  const [user, setUser] = useState({});\n  const [posts, setPosts] = useState([]);\n  const [messages, setMessages] = useState([])\n  \n  return <>\n    <Navbar token={token} setToken={setToken} messages={messages} setMessages={setMessages} user={user}  setUser={setUser} />\n   \n    <Route exact path=\"/\">\n      <GetPosts setPosts={setPosts} posts={posts} token={token} setToken={setToken}/>\n    </Route>\n\n    <Route path=\"/register\">\n      <Signin type={'register'} setToken={setToken} token={token} setUser={setUser}/>\n     </Route>\n\n    <Route path=\"/login\">\n        <Signin type={'login'} setToken={setToken} setUser={setUser}/>\n    </Route>\n\n    <Route path=\"/addposts\">\n        <AddPost setPosts={setPosts} token={token} posts={posts} user={user} setUser={user}/>\n    </Route>\n\n    <Route path='/users/me'>\n        <UserProfile user={user} setUser={setUser} setPosts={setPosts} token={token} posts={posts} messages={messages} setMessages={setMessages}/>\n    </Route>\n    \n    <Route path='/messages'>\n        <MessageList token={token} setUser={setUser} user={user} messages={messages} setMessages={setMessages}/>\n     </Route>\n  </>\n}\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('app'),\n);\n\n"],"sourceRoot":""}